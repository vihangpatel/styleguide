'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createMergeArrayStyle;

var _reduce = require('lodash/reduce');

var _reduce2 = _interopRequireDefault(_reduce);

var _isPlainObject = require('lodash/isPlainObject');

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _arrayifyValue = require('./arrayifyValue');

var _arrayifyValue2 = _interopRequireDefault(_arrayifyValue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function createMergeArrayStyle(mergeProps) {
  return function mergeArrayStyle(base) {
    for (var _len = arguments.length, extendingStyles = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      extendingStyles[_key - 1] = arguments[_key];
    }

    return (0, _reduce2.default)(extendingStyles, function (mergedStyle, style) {
      return (0, _reduce2.default)(style, function (merged, value, property) {
        var baseValue = merged[property];

        if (baseValue && (!mergeProps || mergeProps.indexOf(property) !== -1)) {
          merged[property] = [].concat(_toConsumableArray((0, _arrayifyValue2.default)(baseValue)), _toConsumableArray((0, _arrayifyValue2.default)(value)));
        } else if ((0, _isPlainObject2.default)(baseValue) && (0, _isPlainObject2.default)(value)) {
          merged[property] = mergeArrayStyle({}, baseValue, value);
        } else {
          merged[property] = value;
        }

        return merged;
      }, mergedStyle);
    }, base);
  };
}