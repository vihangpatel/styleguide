var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

import cssbeautify from 'cssbeautify';
import forEach from 'lodash/forEach';

function addBeautifier(renderer, options) {
  function beautify() {
    forEach(renderer.nodes, function (node, key) {
      var beautifiedContent = cssbeautify(node.textContent, options);

      if (node.textContent !== beautifiedContent) {
        node.textContent = beautifiedContent;
      }
    });

    setTimeout(beautify, 200);
  }

  beautify();

  return renderer;
}

var defaultOptions = {
  indent: '  ',
  openbrace: 'end-of-line',
  autosemicolon: false
};

export default function beautifier() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  return function (renderer) {
    return addBeautifier(renderer, _extends({}, defaultOptions, options));
  };
}