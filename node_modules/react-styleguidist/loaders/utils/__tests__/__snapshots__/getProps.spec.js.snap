// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should highlight code in description (fenced code block) 1`] = `
Object {
  "description": "The only true button.

    <span class=\\"hljs-selector-tag\\">alert</span>(<span class=\\"hljs-string\\">'Hello world'</span>);
",
  "doclets": Object {},
  "methods": Array [],
  "tags": Object {},
}
`;

exports[`should highlight code in description (regular code block) 1`] = `
Object {
  "description": "The only true button.

    <span class=\\"hljs-selector-tag\\">alert</span>(<span class=\\"hljs-string\\">'Hello world'</span>);
",
  "doclets": Object {},
  "methods": Array [],
  "tags": Object {},
}
`;

exports[`should not crash when using doctrine to parse a default prop that isn't in the props list 1`] = `
Object {
  "description": "The only true button.
",
  "doclets": Object {},
  "methods": Array [],
  "props": Object {
    "crash": Object {
      "description": "",
      "tags": Object {},
    },
  },
  "tags": Object {},
}
`;

exports[`should remove non-public methods 1`] = `
Object {
  "doclets": Object {},
  "methods": Array [
    Object {
      "docblock": "Public method.
@public",
      "tags": Object {
        "public": Array [
          Object {
            "description": null,
            "title": "public",
          },
        ],
      },
    },
  ],
}
`;

exports[`should return an object for props 1`] = `
Object {
  "description": "The only true button.
",
  "doclets": Object {},
  "methods": Array [],
  "props": Object {
    "children": Object {
      "description": "Button label.",
      "required": true,
      "tags": Object {},
      "type": Object {},
    },
    "color": Object {
      "description": "",
      "required": false,
      "tags": Object {},
      "type": Object {},
    },
  },
  "tags": Object {},
}
`;

exports[`should return an object for props with doclets 1`] = `
Object {
  "description": "The only true button.
",
  "doclets": Object {
    "bar": "Bar
",
    "foo": "Foo",
  },
  "methods": Array [],
  "tags": Object {
    "bar": Array [
      Object {
        "description": "Bar",
        "title": "bar",
      },
    ],
    "foo": Array [
      Object {
        "description": "Foo",
        "title": "foo",
      },
    ],
  },
}
`;

exports[`should return an object for props without description 1`] = `
Object {
  "doclets": Object {},
  "methods": Array [],
  "props": Object {
    "children": Object {
      "description": "Button label.",
      "required": true,
      "tags": Object {},
      "type": Object {},
    },
  },
}
`;

exports[`should return require statement for @example doclet 1`] = `
Object {
  "description": "The only true button.
",
  "doclets": Object {},
  "example": RequireStatement {
    "filepath": "!!<rootDir>/loaders/examples-loader.js!../../../test/components/Placeholder/examples.md",
  },
  "methods": Array [],
  "tags": Object {
    "example": Array [
      Object {
        "description": "../../../test/components/Placeholder/examples.md",
        "title": "example",
      },
    ],
  },
}
`;

exports[`should return require statement for @example doclet only when the file exists 1`] = `
Object {
  "description": "The only true button.
",
  "doclets": Object {
    "example": "example.md
",
  },
  "methods": Array [],
  "tags": Object {
    "example": Array [
      Object {
        "description": "example.md",
        "title": "example",
      },
    ],
  },
}
`;
