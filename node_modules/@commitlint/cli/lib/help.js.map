{"version":3,"sources":["../src/help.js"],"names":["module","exports","lines","Object","entries","configuration","description","map","name","entry","desc","alias","find","defaults","default","filter","Boolean","longest","flags","line","reduce","sum","flag","length","sort","Number","fs","ds","join","repeat"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,yBAAiB;AACjC,KAAMC,QAAQC,OAAOC,OAAP,CAAeC,cAAcC,WAA7B,EAA0CC,GAA1C,CAA8C,iBAAS;AACpE,MAAMC,OAAOC,MAAM,CAAN,CAAb;AACA,MAAMC,OAAOD,MAAM,CAAN,CAAb;AACA,MAAME,QAAQR,OAAOC,OAAP,CAAeC,cAAcM,KAA7B,EACZC,IADY,CACP;AAAA,UAASH,MAAM,CAAN,MAAaD,IAAtB;AAAA,GADO,EAEZD,GAFY,CAER;AAAA,UAASE,MAAM,CAAN,CAAT;AAAA,GAFQ,EAEW,CAFX,CAAd;AAGA,MAAMI,WAAWR,cAAcS,OAAd,CAAsBN,IAAtB,CAAjB;AACA,SAAO,CAAC,CAACA,IAAD,EAAOG,KAAP,EAAcI,MAAd,CAAqBC,OAArB,CAAD,EAAgCN,IAAhC,EAAsCG,QAAtC,EAAgDE,MAAhD,CAAuDC,OAAvD,CAAP;AACA,EARa,CAAd;;AAUA,KAAMC,UAAUf,MACdK,GADc,CACV,gBAAQ;AACZ,MAAMW,QAAQC,KAAK,CAAL,CAAd;AACA,SAAOD,MAAME,MAAN,CAAa,UAACC,GAAD,EAAMC,IAAN;AAAA,UAAeD,MAAMC,KAAKC,MAA1B;AAAA,GAAb,EAA+C,CAA/C,CAAP;AACA,EAJc,EAKdC,IALc,CAKTC,MALS,EAKD,CALC,CAAhB;;AAOA,QAAOvB,MACLK,GADK,CACD,gBAAQ;AACZ,MAAMW,QAAQC,KAAK,CAAL,CAAd;AACA,MAAMT,OAAOS,KAAK,CAAL,CAAb;AACA,MAAMN,WAAWM,KAAK,CAAL,CAAjB;AACA,MAAMO,KAAKR,MAAMX,GAAN,CACV;AAAA,UAASe,KAAKC,MAAL,GAAc,CAAd,GAAmB,KAAID,IAAK,EAA5B,GAAiC,KAAIA,IAAK,EAAnD;AAAA,GADU,CAAX;AAGA,MAAMK,KAAKd,WAAY,kBAAiBA,QAAS,EAAtC,GAA0C,EAArD;AACA,MAAMU,SAASL,MAAME,MAAN,CAAa,UAACC,GAAD,EAAMC,IAAN;AAAA,UAAeD,MAAMC,KAAKC,MAA1B;AAAA,GAAb,EAA+C,CAA/C,CAAf;AACA,SAAQ,GAAEG,GAAGE,IAAH,CAAQ,GAAR,CAAa,GAAE,IAAIC,MAAJ,CAAW,IAAIZ,OAAJ,GAAcM,MAAzB,CAAiC,GAAEb,IAAK,GAAEiB,EAAG,EAAtE;AACA,EAXK,EAYLC,IAZK,CAYA,IAZA,CAAP;AAaA,CA/BD","file":"help.js","sourcesContent":["module.exports = configuration => {\n\tconst lines = Object.entries(configuration.description).map(entry => {\n\t\tconst name = entry[0];\n\t\tconst desc = entry[1];\n\t\tconst alias = Object.entries(configuration.alias)\n\t\t\t.find(entry => entry[1] === name)\n\t\t\t.map(entry => entry[0])[0];\n\t\tconst defaults = configuration.default[name];\n\t\treturn [[name, alias].filter(Boolean), desc, defaults].filter(Boolean);\n\t});\n\n\tconst longest = lines\n\t\t.map(line => {\n\t\t\tconst flags = line[0];\n\t\t\treturn flags.reduce((sum, flag) => sum + flag.length, 0);\n\t\t})\n\t\t.sort(Number)[0];\n\n\treturn lines\n\t\t.map(line => {\n\t\t\tconst flags = line[0];\n\t\t\tconst desc = line[1];\n\t\t\tconst defaults = line[2];\n\t\t\tconst fs = flags.map(\n\t\t\t\tflag => (flag.length > 1 ? `--${flag}` : ` -${flag}`)\n\t\t\t);\n\t\t\tconst ds = defaults ? `, defaults to: ${defaults}` : '';\n\t\t\tconst length = flags.reduce((sum, flag) => sum + flag.length, 0);\n\t\t\treturn `${fs.join(',')}${' '.repeat(4 + longest - length)}${desc}${ds}`;\n\t\t})\n\t\t.join('\\n');\n};\n"]}