{"version":3,"sources":["../../src/rules/type-case.js"],"names":["parsed","when","value","type","negated","result"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;kBAEe,UAACA,MAAD,EAASC,IAAT,EAAeC,KAAf,EAAyB;AAAA,KAChCC,IADgC,GACxBH,MADwB,CAChCG,IADgC;;;AAGvC,KAAI,CAACA,IAAL,EAAW;AACV,SAAO,CAAC,IAAD,CAAP;AACA;;AAED,KAAMC,UAAUH,SAAS,OAAzB;;AAEA,KAAMI,SAAS,0BAAWF,IAAX,EAAiBD,KAAjB,CAAf;AACA,QAAO,CACNE,UAAU,CAACC,MAAX,GAAoBA,MADd,EAEN,uBAAQ,CAAE,cAAF,EAAiBD,UAAW,KAAX,GAAkB,IAAnC,EAA0C,MAAKF,KAAM,EAArD,CAAR,CAFM,CAAP;AAIA,C","file":"type-case.js","sourcesContent":["import ensureCase from '../library/ensure-case';\nimport message from '../library/message';\n\nexport default (parsed, when, value) => {\n\tconst {type} = parsed;\n\n\tif (!type) {\n\t\treturn [true];\n\t}\n\n\tconst negated = when === 'never';\n\n\tconst result = ensureCase(type, value);\n\treturn [\n\t\tnegated ? !result : result,\n\t\tmessage([`subject must`, negated ? `not` : null, `be ${value}`])\n\t];\n};\n"]}