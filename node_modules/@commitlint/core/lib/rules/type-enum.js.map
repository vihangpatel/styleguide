{"version":3,"sources":["../../src/rules/type-enum.js"],"names":["parsed","when","value","input","type","negated","result","join"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;kBAEe,UAACA,MAAD,EAASC,IAAT,EAAeC,KAAf,EAAyB;AAAA,KAC1BC,KAD0B,GACjBH,MADiB,CAChCI,IADgC;;;AAGvC,KAAI,CAACD,KAAL,EAAY;AACX,SAAO,CAAC,IAAD,CAAP;AACA;;AAED,KAAME,UAAUJ,SAAS,OAAzB;AACA,KAAMK,SAAS,0BAAWH,KAAX,EAAkBD,KAAlB,CAAf;;AAEA,QAAO,CACNG,UAAU,CAACC,MAAX,GAAoBA,MADd,EAEN,uBAAQ,CACN,WADM,EAEPD,UAAW,KAAX,GAAkB,IAFX,EAGN,cAAaH,MAAMK,IAAN,CAAW,IAAX,CAAiB,GAHxB,CAAR,CAFM,CAAP;AAQA,C","file":"type-enum.js","sourcesContent":["import ensureEnum from '../library/ensure-enum';\nimport message from '../library/message';\n\nexport default (parsed, when, value) => {\n\tconst {type: input} = parsed;\n\n\tif (!input) {\n\t\treturn [true];\n\t}\n\n\tconst negated = when === 'never';\n\tconst result = ensureEnum(input, value);\n\n\treturn [\n\t\tnegated ? !result : result,\n\t\tmessage([\n\t\t\t`type must`,\n\t\t\tnegated ? `not` : null,\n\t\t\t`be one of [${value.join(', ')}]`\n\t\t])\n\t];\n};\n"]}