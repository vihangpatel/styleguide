{"version":3,"sources":["../../src/library/is-ignored.test.js"],"names":["VERSION_MESSAGES","AMENDMENTS","AMENDED_VERSION_MESSAGES","reduce","results","message","map","amendment","t","false","true","forEach"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,mBAAmB,CACxB,OADwB,EAExB,OAFwB,EAGxB,OAHwB,EAIxB,aAJwB,EAKxB,sBALwB,EAMxB,SANwB,EAOxB,WAPwB,EAQxB,eARwB,EASxB,iBATwB,EAUxB,wBAVwB,EAWxB,0BAXwB,EAYxB,eAZwB,EAaxB,QAbwB,EAcxB,SAdwB,CAAzB;;AAiBA,IAAMC,aAAa,CAClB,gDADkB,EAElB,sDAFkB,EAGlB,sGAHkB,CAAnB;;AAMA,IAAMC,2BAA2BF,iBAAiBG,MAAjB,CAAwB,UAACC,OAAD,EAAUC,OAAV,EAAsB;AAC9E,mDACID,OADJ,oCAEIH,WAAWK,GAAX,CAAe;AAAA,SAAc,GAAED,OAAQ,OAAME,SAAU,EAAxC;AAAA,EAAf,CAFJ;AAIA,CALgC,EAK9B,EAL8B,CAAjC;;AAOA,mBAAK,mDAAL,EAA0D,aAAK;AAC9DC,GAAEC,KAAF,CAAQ,0BAAR;AACA,CAFD;;AAIA,mBAAK,mDAAL,EAA0D,aAAK;AAC9DD,GAAEC,KAAF,CAAQ,yBAAU,EAAV,CAAR;AACA,CAFD;;AAIA,mBAAK,uCAAL,EAA8C,aAAK;AAClDD,GAAEC,KAAF,CAAQ,yBAAU,gBAAV,CAAR;AACA,CAFD;;AAIA,mBAAK,sCAAL,EAA6C,aAAK;AACjDD,GAAEE,IAAF,CAAO,yBAAU,sBAAV,CAAP;AACA,CAFD;;AAIA,mBAAK,mCAAL,EAA0C,aAAK;AAC9CF,GAAEE,IAAF,CAAO,yBAAU,yBAAV,CAAP;AACA,CAFD;;AAIA,mBAAK,uCAAL,EAA8C,aAAK;AAClDF,GAAEE,IAAF,CACC,yBACE,qIADF,CADD;AAKAF,GAAEE,IAAF,CACC,yBACE,qIADF,CADD;AAKA,CAXD;;AAaA,mBAAK,kCAAL,EAAyC,aAAK;AAC7CV,kBAAiBW,OAAjB,CAAyB;AAAA,SAAWH,EAAEE,IAAF,CAAO,yBAAUL,OAAV,CAAP,CAAX;AAAA,EAAzB;AACA,CAFD;;AAIA,mBAAK,+CAAL,EAAsD,aAAK;AAC1DH,0BAAyBS,OAAzB,CAAiC;AAAA,SAAWH,EAAEE,IAAF,CAAO,yBAAUL,OAAV,CAAP,CAAX;AAAA,EAAjC;AACA,CAFD;;AAIA,mBAAK,kCAAL,EAAyC,aAAK;AAC7CG,GAAEE,IAAF,CAAO,yBAAU,uBAAV,CAAP;AACA,CAFD;;AAIA,mBAAK,mCAAL,EAA0C,aAAK;AAC9CF,GAAEE,IAAF,CAAO,yBAAU,wBAAV,CAAP;AACA,CAFD","file":"is-ignored.test.js","sourcesContent":["import test from 'ava';\nimport isIgnored from './is-ignored';\n\nconst VERSION_MESSAGES = [\n\t'0.0.1',\n\t'0.1.0',\n\t'1.0.0',\n\t'0.0.1-alpha',\n\t'0.0.1-some-crazy-tag',\n\t'0.0.1-0',\n\t'0.0.1-999',\n\t'0.0.1-alpha.0',\n\t'0.0.1-alpha.999',\n\t'0.0.1-some-crazy-tag.0',\n\t'0.0.1-some-crazy-tag.999',\n\t'0.0.1-1e69d54',\n\t'v0.0.1',\n\t' v3.0.0'\n];\n\nconst AMENDMENTS = [\n\t'Signed-off-by: Developer <example@example.com>',\n\t'Change-Id: I895114872a515a269487a683124b63303818e19c',\n\t'Signed-off-by: Developer <example@example.com>\\nChange-Id: I895114872a515a269487a683124b63303818e19c'\n];\n\nconst AMENDED_VERSION_MESSAGES = VERSION_MESSAGES.reduce((results, message) => {\n\treturn [\n\t\t...results,\n\t\t...AMENDMENTS.map(amendment => `${message}\\n\\n${amendment}`)\n\t];\n}, []);\n\ntest('should return false when called without arguments', t => {\n\tt.false(isIgnored());\n});\n\ntest('should return false when called with empty string', t => {\n\tt.false(isIgnored(''));\n});\n\ntest('should return false for normal commit', t => {\n\tt.false(isIgnored('initial commit'));\n});\n\ntest('should return true for branch merges', t => {\n\tt.true(isIgnored(\"Merge branch 'iss53'\"));\n});\n\ntest('should return true for merged PRs', t => {\n\tt.true(isIgnored('Merge pull request #369'));\n});\n\ntest('should return true for revert commits', t => {\n\tt.true(\n\t\tisIgnored(\n\t\t\t`Revert \"docs: add recipe for linting of all commits in a PR (#36)\"\\n\\nThis reverts commit 1e69d542c16c2a32acfd139e32efa07a45f19111.`\n\t\t)\n\t);\n\tt.true(\n\t\tisIgnored(\n\t\t\t`revert \"docs: add recipe for linting of all commits in a PR (#36)\"\\n\\nThis reverts commit 1e69d542c16c2a32acfd139e32efa07a45f19111.`\n\t\t)\n\t);\n});\n\ntest('should ignore npm semver commits', t => {\n\tVERSION_MESSAGES.forEach(message => t.true(isIgnored(message)));\n});\n\ntest('should ignore npm semver commits with footers', t => {\n\tAMENDED_VERSION_MESSAGES.forEach(message => t.true(isIgnored(message)));\n});\n\ntest('should return true fixup commits', t => {\n\tt.true(isIgnored('fixup! initial commit'));\n});\n\ntest('should return true squash commits', t => {\n\tt.true(isIgnored('squash! initial commit'));\n});\n"]}