{"version":3,"sources":["../../src/library/resolve-extends.test.js"],"names":["id","actual","t","deepEqual","expected","foo","input","extends","resolve","require","is","prefix","propagated","push","baz","zero","one","two","three","Error","rules","fallback"],"mappings":"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","file":"resolve-extends.test.js","sourcesContent":["import test from 'ava';\nimport resolveExtends from './resolve-extends';\n\nconst id = id => id;\n\ntest('returns empty object when called without params', t => {\n\tconst actual = resolveExtends();\n\tt.deepEqual(actual, {});\n});\n\ntest('returns an equivalent object as passed in', t => {\n\tconst expected = {foo: 'bar'};\n\tconst actual = resolveExtends(expected);\n\tt.deepEqual(actual, expected);\n});\n\ntest('uses empty prefix by default', t => {\n\tconst input = {extends: ['extender-name']};\n\n\tresolveExtends(input, {\n\t\tresolve: id,\n\t\trequire(id) {\n\t\t\tt.is(id, 'extender-name');\n\t\t}\n\t});\n});\n\ntest('uses prefix as configured', t => {\n\tconst input = {extends: ['extender-name']};\n\n\tresolveExtends(input, {\n\t\tprefix: 'prefix',\n\t\tresolve: id,\n\t\trequire(id) {\n\t\t\tt.is(id, 'prefix-extender-name');\n\t\t}\n\t});\n});\n\ntest('ignores prefix for scoped extends', t => {\n\tconst input = {extends: ['@scope/extender-name']};\n\n\tresolveExtends(input, {\n\t\tprefix: 'prefix',\n\t\tresolve: id,\n\t\trequire(id) {\n\t\t\tt.is(id, '@scope/extender-name');\n\t\t}\n\t});\n});\n\ntest('ignores prefix for relative extends', t => {\n\tconst input = {extends: ['./extender']};\n\n\tresolveExtends(input, {\n\t\tprefix: 'prefix',\n\t\tresolve: id,\n\t\trequire(id) {\n\t\t\tt.is(id, './extender');\n\t\t}\n\t});\n});\n\ntest('propagates return value of require function', t => {\n\tconst input = {extends: ['extender-name']};\n\tconst propagated = {foo: 'bar'};\n\n\tconst actual = resolveExtends(input, {\n\t\tresolve: id,\n\t\trequire() {\n\t\t\treturn propagated;\n\t\t}\n\t});\n\n\tt.is(actual.foo, 'bar');\n});\n\ntest('resolves extends recursively', t => {\n\tconst input = {extends: ['extender-name']};\n\tconst actual = [];\n\n\tresolveExtends(input, {\n\t\tresolve: id,\n\t\trequire(id) {\n\t\t\tactual.push(id);\n\t\t\tif (id === 'extender-name') {\n\t\t\t\treturn {extends: ['recursive-extender-name']};\n\t\t\t}\n\t\t\tif (id === 'recursive-extender-name') {\n\t\t\t\treturn {foo: 'bar'};\n\t\t\t}\n\t\t}\n\t});\n\n\tt.deepEqual(actual, ['extender-name', 'recursive-extender-name']);\n});\n\ntest('uses prefix key recursively', t => {\n\tconst input = {extends: ['extender-name']};\n\tconst actual = [];\n\n\tresolveExtends(input, {\n\t\tprefix: 'prefix',\n\t\tresolve: id,\n\t\trequire(id) {\n\t\t\tactual.push(id);\n\t\t\tif (id === 'prefix-extender-name') {\n\t\t\t\treturn {extends: ['recursive-extender-name']};\n\t\t\t}\n\t\t\tif (id === 'prefix-recursive-extender-name') {\n\t\t\t\treturn {foo: 'bar'};\n\t\t\t}\n\t\t}\n\t});\n\n\tt.deepEqual(actual, [\n\t\t'prefix-extender-name',\n\t\t'prefix-recursive-extender-name'\n\t]);\n});\n\ntest('propagates contents recursively', t => {\n\tconst input = {extends: ['extender-name']};\n\n\tconst actual = resolveExtends(input, {\n\t\tresolve: id,\n\t\trequire(id) {\n\t\t\tif (id === 'extender-name') {\n\t\t\t\treturn {extends: ['recursive-extender-name'], foo: 'bar'};\n\t\t\t}\n\t\t\tif (id === 'recursive-extender-name') {\n\t\t\t\treturn {baz: 'bar'};\n\t\t\t}\n\t\t}\n\t});\n\n\tconst expected = {\n\t\textends: ['extender-name'],\n\t\tfoo: 'bar',\n\t\tbaz: 'bar'\n\t};\n\n\tt.deepEqual(actual, expected);\n});\n\ntest('extending contents should take precedence', t => {\n\tconst input = {extends: ['extender-name'], zero: 'root'};\n\n\tconst actual = resolveExtends(input, {\n\t\tresolve: id,\n\t\trequire(id) {\n\t\t\tif (id === 'extender-name') {\n\t\t\t\treturn {extends: ['recursive-extender-name'], zero: id, one: id};\n\t\t\t}\n\t\t\tif (id === 'recursive-extender-name') {\n\t\t\t\treturn {\n\t\t\t\t\textends: ['second-recursive-extender-name'],\n\t\t\t\t\tzero: id,\n\t\t\t\t\tone: id,\n\t\t\t\t\ttwo: id\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (id === 'second-recursive-extender-name') {\n\t\t\t\treturn {zero: id, one: id, two: id, three: id};\n\t\t\t}\n\t\t}\n\t});\n\n\tconst expected = {\n\t\textends: ['extender-name'],\n\t\tzero: 'root',\n\t\tone: 'extender-name',\n\t\ttwo: 'recursive-extender-name',\n\t\tthree: 'second-recursive-extender-name'\n\t};\n\n\tt.deepEqual(actual, expected);\n});\n\ntest('should fall back to conventional-changelog-lint-config prefix', t => {\n\tconst input = {extends: ['extender-name']};\n\n\tconst actual = resolveExtends(input, {\n\t\tprefix: 'prefix',\n\t\tresolve(id) {\n\t\t\tif (id === 'conventional-changelog-lint-config-extender-name') {\n\t\t\t\treturn 'conventional-changelog-lint-config-extender-name';\n\t\t\t}\n\t\t\tthrow new Error(`Could not find module \"*${id}\"`);\n\t\t},\n\t\trequire(id) {\n\t\t\tif (id === 'conventional-changelog-lint-config-extender-name') {\n\t\t\t\treturn {\n\t\t\t\t\trules: {\n\t\t\t\t\t\tfallback: true\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t});\n\n\tt.deepEqual(actual, {\n\t\textends: ['extender-name'],\n\t\trules: {\n\t\t\tfallback: true\n\t\t}\n\t});\n});\n"]}