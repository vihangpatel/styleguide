var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function isPlainObject(obj) {
  return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && !Array.isArray(obj);
}


function resolveCustomProperty(style, properties, renderer) {
  for (var property in style) {
    var value = style[property];

    if (properties.hasOwnProperty(property)) {
      renderer._mergeStyle(style, properties[property](value));
      delete style[property];
    }

    if (isPlainObject(value)) {
      style[property] = resolveCustomProperty(value, properties, renderer);
    }
  }

  return style;
}

export default function customProperty(properties) {
  return function (style, type, renderer) {
    return resolveCustomProperty(style, properties, renderer);
  };
}